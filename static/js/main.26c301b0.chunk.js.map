{"version":3,"sources":["components/ProductItem/ProductItem.jsx","components/SelectedProduct/SelectedProduct.jsx","components/ViewProductsList/ViewProductsList.jsx","App.js","reportWebVitals.js","index.js"],"names":["ProductItem","id","name","priority","selectProduct","status","removeProduct","useState","productStatus","setProductStatus","statusTime","setStatusTime","className","onClick","style","cursor","toUpperCase","slice","length","type","currDate","Date","month","getMonth","day","getDay","hours","getHours","minutes","getMinutes","changeStatus","classNames","SelectedProduct","selected","selectedProductStatus","setSelectedProductStatus","selectedProductTime","setSelectedProductTime","width","height","marginTop","changeSelectedStatus","ViewProductsList","products","selectedStatus","selectedProductId","sortedProducts","sort","a","b","filter","product","toString","find","map","productsData","App","setProducts","productName","setProductName","productPriority","setProductPriority","setSelectedStatus","selectedProduct","setSelectedProduct","console","log","onSubmit","e","preventDefault","newProduct","availableProducts","placeholder","value","onChange","target","productId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26c301b0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './ProductItem.scss';\n\nexport const ProductItem = ({ \n  id, \n  name, \n  priority,  \n  selectProduct, \n  status, \n  removeProduct\n}) => {\n  const [productStatus, setProductStatus] = useState(status)\n  const [statusTime, setStatusTime] = useState(''); \n\n  const changeStatus = () => {\n    const currDate = new Date();\n    const month = currDate.getMonth() + 1;\n    const day = currDate.getDay();\n    const hours = currDate.getHours();\n    const minutes = currDate.getMinutes();\n\n    setStatusTime(`${day < 10 ? `0${day}` : day}/${month < 10 ?\n      `0${month}` : month} ${hours}:${minutes}`)\n    setProductStatus(!productStatus)\n  }\n\n  return (\n    <li\n      key={id}\n      className=\"products-list__item item\"\n    >\n      <div \n        onClick={() => selectProduct(id)}\n        style={{cursor: \"pointer\"}}\n      >\n        <h2>Priority#{priority}</h2>\n        <p>{name[0].toUpperCase() + name.slice(1, name.length)}</p>\n      </div>\n      <div>\n        <button\n            type=\"button\"\n            onClick={() => changeStatus(id)}\n            className=\"item__button--status\"\n        >\n          Change status\n        </button>\n        <p className={classNames(\"item__status-value\", \n          {\n            \"item__status-value--have\": productStatus,\n            \"item__status-value--run-out\": !productStatus\n          })}\n        >\n          {productStatus ? \"have\" : \"ran out\"}\n        </p>\n      </div>\n      {\n        statusTime && \n          <p className=\"item__status-time\">\n            Status changed: {statusTime}\n          </p>\n      }\n      <button \n        type=\"button\" \n        onClick={() => removeProduct(id)}\n        className=\"item__button--remove\"\n      >\n        Remove\n      </button>\n    </li>\n  )\n}","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport '../ProductItem/ProductItem.scss';\n\nexport const SelectedProduct = ({ selected, removeProduct }) => {\n  const [selectedProductStatus, setSelectedProductStatus] = useState(true)\n  const [selectedProductTime, setSelectedProductTime] = useState(''); \n\n  const changeSelectedStatus = () => {\n    const currDate = new Date();\n    const month = currDate.getMonth() + 1;\n    const day = currDate.getDay();\n    const hours = currDate.getHours();\n    const minutes = currDate.getMinutes();\n\n    setSelectedProductTime(`${day < 10 ? `0${day}` : day}/${month < 10 ?\n       `0${month}` : month} ${hours}:${minutes}`)\n    setSelectedProductStatus(!selectedProductStatus)\n  }\n\n  return (\n    selected ? (\n      <div \n        className=\"products-list__item item\"\n        style={{\n          width: '230px',\n          height: '350px',\n          marginTop: '100px'\n        }}\n      >\n        <h2>Priority#{selected.priority}</h2>\n        <p>{selected.name}</p>\n        <p>\n          <button\n            type=\"button\"\n            onClick={() => changeSelectedStatus(selected.id)}\n            className=\"item__button--status\"\n          >\n            Change status\n          </button> \n          <p className={classNames(\"item__status-value\", \n            {\n              \"item__status-value--have\": selectedProductStatus,\n              \"item__status-value--run-out\": !selectedProductStatus\n            })}\n          >\n            {selectedProductStatus ? \"have\" : \"ran out\"}\n          </p>\n        </p>\n        <p className=\"item__status-time\">\n          Status changed - {selectedProductTime}\n        </p>\n        <button \n          type=\"button\" \n          onClick={() => removeProduct(selected.id)}\n          className=\"item__button--remove\"\n        >\n          Remove\n        </button>\n      </div>\n    ) : null\n  )\n}","import React, {useState} from 'react';\nimport './ViewProductsList.scss';\n\nimport { ProductItem } from '../ProductItem/ProductItem';\nimport { SelectedProduct } from '../SelectedProduct/SelectedProduct';\n\nexport const ViewProductsList = ({\n  products, \n  removeProduct, \n  selectedStatus,\n  selectProduct,\n  selectedProductId\n}) => {\n  \n  let sortedProducts = products\n    .sort((a, b) => a.priority - b.priority)\n\n  if(selectedStatus) {\n    sortedProducts = sortedProducts\n      .filter(product => product.status.toString() === selectedStatus)\n  }\n\n  const selected = sortedProducts\n    .find(product => product.id === selectedProductId)\n\n  return (\n    <div className=\"products\">\n      <ul className=\"products-list\">\n        {\n          sortedProducts.map(product => (\n              <ProductItem \n                key={product.id} \n                {...product} \n                removeProduct={removeProduct}\n                selected={selected}\n                selectProduct={selectProduct}\n              />\n          ))\n        }\n      </ul>\n      <div className=\"selected-product__container\">\n        <SelectedProduct \n          selected={selected} \n          removeProduct={removeProduct} \n        />\n      </div>\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { ViewProductsList } from './components/ViewProductsList/ViewProductsList';\n\nconst productsData = [\n  {\n    id: 1,\n    name: 'bread',\n    status: true,\n    priority: 1,\n  },\n  {\n    id: 2,\n    name: 'milk',\n    status: false,\n    priority: 5,\n  },\n  {\n    id: 3,\n    name: 'eggs',\n    status: true,\n    priority: 4,\n  },\n  {\n    id: 4,\n    name: 'sausage',\n    status: true,\n    priority: 2,\n  },\n  {\n    id: 5,\n    name: 'apples',\n    status: false,\n    priority: 3,\n  }\n]\n\nfunction App() {\n  const [products, setProducts] = useState(productsData);\n  const [productName, setProductName] = useState('');\n  const [productPriority, setProductPriority] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState(0);\n  const [selectedProduct, setSelectedProduct] = useState(0);\n\n  const addProduct = (e) => {\n    e.preventDefault()\n\n    const newProduct = {\n      id: products.length + 1,\n      name: productName,\n      status: false,\n      priority: productPriority,\n    }\n\n    if (productName && productPriority) {\n      setProducts((availableProducts) => {\n        return [...availableProducts, newProduct]\n      })\n\n      setProductName('');\n      setProductPriority('');\n    }\n  }\n\n  const removeProduct = (productId) => {\n    setProducts(products\n      .filter(product => product.id !== productId))\n  }\n\n  const selectProduct = (productId) => {\n    setSelectedProduct(productId)\n  }\n\n  console.log(selectedStatus)\n\n  return (\n    <div className=\"App\">\n      <form\n        onSubmit={addProduct}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Input product*\"\n          value={productName}\n          onChange={(e) => setProductName(e.target.value)}\n          className=\"input-add\"\n        />\n        <select\n          value={productPriority}\n          onChange={(e) => setProductPriority(e.target.value)}\n          className=\"select-add\"\n        >\n          <option>Choose a priority:</option>\n          {\n            [1, 2, 3, 4, 5].map(priority => (\n              <option key={priority} value={priority}>{priority}</option>\n            ))\n          }   \n        </select>\n        <button \n          type=\"submit\"\n          className=\"button-add\"\n        >\n          Add a product\n        </button>\n      </form>\n\n      Status filter:\n      <select \n        value={selectedStatus} \n        onChange={e => setSelectedStatus(e.target.value)}\n        className=\"select-status\"\n      >\n        <option value=\"\">All</option>\n        <option value=\"false\">Ran out</option>\n        <option value=\"true\">Have</option>\n      </select>\n      <ViewProductsList \n        products={products} \n        removeProduct={removeProduct}\n        selectedStatus={selectedStatus}\n        selectProduct={selectProduct}\n        selectedProductId={selectedProduct}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}